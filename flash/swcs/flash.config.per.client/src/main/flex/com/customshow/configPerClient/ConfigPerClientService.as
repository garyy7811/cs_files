/**
 * Generated by com.customshow.codegen
 *
 */
package com.customshow.configPerClient{

import com.flashflexpro.as3lib.utils.RootContextModule;
import com.customshow.configPerClient.DynaTableClientConfigUpload;
import com.flashflexpro.as3lib.rpc.RpcSpringMvcPost;
import com.customshow.configPerClient.DynaTableClientConfigTranscodeFormat;
import com.flashflexpro.as3lib.rpc.RpcService;


//@see com.customshow.configPerClient.ConfigPerClientService
public class ConfigPerClientService extends RpcService{
    public function ConfigPerClientService( context:RootContextModule ){
        super( context );
    }

    public static const RPC_loadDynaTableClientConfigTranscFormats:String = "loadDynaTableClientConfigTranscFormats";
    public function loadDynaTableClientConfigTranscFormats( result:Function, fault:Function, arg1:String ):RpcSpringMvcPost{
        return createRpcPost( RPC_loadDynaTableClientConfigTranscFormats, arguments );
    }

    public static const RPC_saveTranscodeFormat:String = "saveTranscodeFormat";
    public function saveTranscodeFormat( result:Function, fault:Function, arg1:String, arg2:com.customshow.configPerClient.DynaTableClientConfigTranscodeFormat ):RpcSpringMvcPost{
        return createRpcPost( RPC_saveTranscodeFormat, arguments );
    }

    public static const RPC_loadDynaTableClientConfig:String = "loadDynaTableClientConfig";
    public function loadDynaTableClientConfig( result:Function, fault:Function, arg1:String ):RpcSpringMvcPost{
        return createRpcPost( RPC_loadDynaTableClientConfig, arguments );
    }

    public static const RPC_deleteTranscodeFormat:String = "deleteTranscodeFormat";
    public function deleteTranscodeFormat( result:Function, fault:Function, arg1:String, arg2:String ):RpcSpringMvcPost{
        return createRpcPost( RPC_deleteTranscodeFormat, arguments );
    }

    public static const RPC_saveLabyrinthFormats:String = "saveLabyrinthFormats";
    public function saveLabyrinthFormats( result:Function, fault:Function, arg1:String, arg2:Array ):RpcSpringMvcPost{
        return createRpcPost( RPC_saveLabyrinthFormats, arguments );
    }

    public static const RPC_saveUploadConfig:String = "saveUploadConfig";
    public function saveUploadConfig( result:Function, fault:Function, arg1:String, arg2:com.customshow.configPerClient.DynaTableClientConfigUpload ):RpcSpringMvcPost{
        return createRpcPost( RPC_saveUploadConfig, arguments );
    }
}}