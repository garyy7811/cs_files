/**
 * Generated by com.customshow.codegen
 *
 */
package com.customshow.configPerClient{

import mx.events.PropertyChangeEvent;
import com.flashflexpro.as3lib.data.PropertyDesc;
import com.customshow.configPerClient.DynaTableClientConfigOverride;

[Bindable]
[RemoteClass(alias="com.customshow.configPerClient.DynaTableClientConfigTranscodeFormat")]
public class DynaTableClientConfigTranscodeFormat extends com.customshow.configPerClient.DynaTableClientConfigOverride {
    public function DynaTableClientConfigTranscodeFormat(){
    }

    private static var _allProperties:Vector.<PropertyDesc> = null;
    public static function get allProperties():Vector.<PropertyDesc>{
        if( _allProperties == null ){
            _allProperties = properties.concat( com.customshow.configPerClient.DynaTableClientConfigOverride.allProperties );
        }
        return _allProperties;
    }
    private static var _properties:Vector.<PropertyDesc> = null;
    public static function get properties():Vector.<PropertyDesc>{
        if( _properties == null ){
            _properties = new <PropertyDesc>[ PROP_DESC_baseConfigId, 
                PROP_DESC_taskid, 
                PROP_DESC_noise_reduction, 
                PROP_DESC_status, 
                PROP_DESC_description, 
                PROP_DESC_suggestion, 
                PROP_DESC_fade_in, 
                PROP_DESC_fade_out, 
                PROP_DESC_crop_left, 
                PROP_DESC_crop_top, 
                PROP_DESC_crop_right, 
                PROP_DESC_crop_bottom, 
                PROP_DESC_set_aspect_ratio, 
                PROP_DESC_rc_init_occupancy, 
                PROP_DESC_minrate, 
                PROP_DESC_maxrate, 
                PROP_DESC_bufsize, 
                PROP_DESC_start, 
                PROP_DESC_duration, 
                PROP_DESC_force_keyframes, 
                PROP_DESC_bframes, 
                PROP_DESC_gop, 
                PROP_DESC_video_codec_parameters, 
                PROP_DESC_rotate, 
                PROP_DESC_set_rotate, 
                PROP_DESC_audio_sync, 
                PROP_DESC_video_sync, 
                PROP_DESC_force_interlaced, 
                PROP_DESC_strip_chapters, 
                PROP_DESC_time, 
                PROP_DESC_width, 
                PROP_DESC_height, 
                PROP_DESC_output, 
                PROP_DESC_keyframe, 
                PROP_DESC_destination, 
                PROP_DESC_add_meta, 
                PROP_DESC_audio_bitrate, 
                PROP_DESC_audio_codec, 
                PROP_DESC_audio_sample_rate, 
                PROP_DESC_audio_volume, 
                PROP_DESC_bitrate, 
                PROP_DESC_framerate, 
                PROP_DESC_hint, 
                PROP_DESC_keep_aspect_ratio, 
                PROP_DESC_profile, 
                PROP_DESC_size, 
                PROP_DESC_turbo, 
                PROP_DESC_two_pass, 
                PROP_DESC_video_codec, 
                PROP_DESC_cbr, 
                PROP_DESC_isDefault
            ];
        }
        return _properties;
    }
    public static const PROP_DESC_baseConfigId:PropertyDesc = new PropertyDesc( "baseConfigId" , false, true, "");
    public var baseConfigId:String;

    public static const PROP_DESC_taskid:PropertyDesc = new PropertyDesc( "taskid" , false, true, "");
    public var taskid:String;

    public static const PROP_DESC_noise_reduction:PropertyDesc = new PropertyDesc( "noise_reduction" );
    public var noise_reduction:String;

    public static const PROP_DESC_status:PropertyDesc = new PropertyDesc( "status" , false, true, "");
    public var status:String;

    public static const PROP_DESC_description:PropertyDesc = new PropertyDesc( "description" );
    public var description:String;

    public static const PROP_DESC_suggestion:PropertyDesc = new PropertyDesc( "suggestion" , false, true, "");
    public var suggestion:String;

    public static const PROP_DESC_fade_in:PropertyDesc = new PropertyDesc( "fade_in" );
    public var fade_in:String;

    public static const PROP_DESC_fade_out:PropertyDesc = new PropertyDesc( "fade_out" );
    public var fade_out:String;

    public static const PROP_DESC_crop_left:PropertyDesc = new PropertyDesc( "crop_left" );
    public var crop_left:String;

    public static const PROP_DESC_crop_top:PropertyDesc = new PropertyDesc( "crop_top" );
    public var crop_top:String;

    public static const PROP_DESC_crop_right:PropertyDesc = new PropertyDesc( "crop_right" );
    public var crop_right:String;

    public static const PROP_DESC_crop_bottom:PropertyDesc = new PropertyDesc( "crop_bottom" );
    public var crop_bottom:String;

    public static const PROP_DESC_set_aspect_ratio:PropertyDesc = new PropertyDesc( "set_aspect_ratio" );
    public var set_aspect_ratio:String;

    public static const PROP_DESC_rc_init_occupancy:PropertyDesc = new PropertyDesc( "rc_init_occupancy" );
    public var rc_init_occupancy:String;

    public static const PROP_DESC_minrate:PropertyDesc = new PropertyDesc( "minrate" , false, false, "[1-9]\\d*");
    public var minrate:String;

    public static const PROP_DESC_maxrate:PropertyDesc = new PropertyDesc( "maxrate" , false, false, "[1-9]\\d*");
    public var maxrate:String;

    public static const PROP_DESC_bufsize:PropertyDesc = new PropertyDesc( "bufsize" );
    public var bufsize:String;

    public static const PROP_DESC_start:PropertyDesc = new PropertyDesc( "start" );
    public var start:String;

    public static const PROP_DESC_duration:PropertyDesc = new PropertyDesc( "duration" , false, true, "");
    public var duration:String;

    public static const PROP_DESC_force_keyframes:PropertyDesc = new PropertyDesc( "force_keyframes" );
    public var force_keyframes:String;

    public static const PROP_DESC_bframes:PropertyDesc = new PropertyDesc( "bframes" );
    public var bframes:String;

    public static const PROP_DESC_gop:PropertyDesc = new PropertyDesc( "gop" );
    public var gop:String;

    public static const PROP_DESC_video_codec_parameters:PropertyDesc = new PropertyDesc( "video_codec_parameters" );
    public var video_codec_parameters:String;

    public static const PROP_DESC_rotate:PropertyDesc = new PropertyDesc( "rotate" );
    public var rotate:String;

    public static const PROP_DESC_set_rotate:PropertyDesc = new PropertyDesc( "set_rotate" );
    public var set_rotate:String;

    public static const PROP_DESC_audio_sync:PropertyDesc = new PropertyDesc( "audio_sync" );
    public var audio_sync:String;

    public static const PROP_DESC_video_sync:PropertyDesc = new PropertyDesc( "video_sync" );
    public var video_sync:String;

    public static const PROP_DESC_force_interlaced:PropertyDesc = new PropertyDesc( "force_interlaced" );
    public var force_interlaced:String;

    public static const PROP_DESC_strip_chapters:PropertyDesc = new PropertyDesc( "strip_chapters" );
    public var strip_chapters:String;

    public static const PROP_DESC_time:PropertyDesc = new PropertyDesc( "time" );
    public var time:String;

    public static const PROP_DESC_width:PropertyDesc = new PropertyDesc( "width" );
    public var width:String;

    public static const PROP_DESC_height:PropertyDesc = new PropertyDesc( "height" );
    public var height:String;

    public static const PROP_DESC_output:PropertyDesc = new PropertyDesc( "output" , false, false, "", [ "mp4","thumbnail" ]);
    public var output:String;

    public static const PROP_DESC_keyframe:PropertyDesc = new PropertyDesc( "keyframe" , false, false, "[1-9]\\d*");
    public var keyframe:String;

    public static const PROP_DESC_destination:PropertyDesc = new PropertyDesc( "destination" , false, true, "");
    public var destination:String;

    public static const PROP_DESC_add_meta:PropertyDesc = new PropertyDesc( "add_meta" );
    public var add_meta:String;

    public static const PROP_DESC_audio_bitrate:PropertyDesc = new PropertyDesc( "audio_bitrate" );
    public var audio_bitrate:String;

    public static const PROP_DESC_audio_codec:PropertyDesc = new PropertyDesc( "audio_codec" );
    public var audio_codec:String;

    public static const PROP_DESC_audio_sample_rate:PropertyDesc = new PropertyDesc( "audio_sample_rate" );
    public var audio_sample_rate:String;

    public static const PROP_DESC_audio_volume:PropertyDesc = new PropertyDesc( "audio_volume" );
    public var audio_volume:String;

    public static const PROP_DESC_bitrate:PropertyDesc = new PropertyDesc( "bitrate" );
    public var bitrate:String;

    public static const PROP_DESC_framerate:PropertyDesc = new PropertyDesc( "framerate" );
    public var framerate:String;

    public static const PROP_DESC_hint:PropertyDesc = new PropertyDesc( "hint" );
    public var hint:String;

    public static const PROP_DESC_keep_aspect_ratio:PropertyDesc = new PropertyDesc( "keep_aspect_ratio" );
    public var keep_aspect_ratio:String;

    public static const PROP_DESC_profile:PropertyDesc = new PropertyDesc( "profile" );
    public var profile:String;

    public static const PROP_DESC_size:PropertyDesc = new PropertyDesc( "size" , false, false, "[1-9]\\d*x[1-9]\\d*");
    public var size:String;

    public static const PROP_DESC_turbo:PropertyDesc = new PropertyDesc( "turbo" );
    public var turbo:String;

    public static const PROP_DESC_two_pass:PropertyDesc = new PropertyDesc( "two_pass" );
    public var two_pass:String;

    public static const PROP_DESC_video_codec:PropertyDesc = new PropertyDesc( "video_codec" );
    public var video_codec:String;

    public static const PROP_DESC_cbr:PropertyDesc = new PropertyDesc( "cbr" );
    public var cbr:String;

    public static const PROP_DESC_isDefault:PropertyDesc = new PropertyDesc( "isDefault" );
    public var isDefault:String;

}
}