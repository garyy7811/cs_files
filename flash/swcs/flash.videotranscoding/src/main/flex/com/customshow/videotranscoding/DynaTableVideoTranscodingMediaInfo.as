/**
 * Generated by com.customshow.codegen
 *
 */
package com.customshow.videotranscoding{

import mx.events.PropertyChangeEvent;
import com.flashflexpro.as3lib.data.PropertyDesc;
import flash.events.EventDispatcher;

[Bindable]
[RemoteClass(alias="com.customshow.videotranscoding.DynaTableVideoTranscodingMediaInfo")]
public class DynaTableVideoTranscodingMediaInfo extends EventDispatcher {
    public function DynaTableVideoTranscodingMediaInfo(){
    }

    private static var _allProperties:Vector.<PropertyDesc> = null;
    public static function get allProperties():Vector.<PropertyDesc>{
        if( _allProperties == null ){
            _allProperties = properties;
        }
        return _allProperties;
    }
    private static var _properties:Vector.<PropertyDesc> = null;
    public static function get properties():Vector.<PropertyDesc>{
        if( _properties == null ){
            _properties = new <PropertyDesc>[ PROP_DESC_format, 
                PROP_DESC_bitrate, 
                PROP_DESC_duration, 
                PROP_DESC_audio_bitrate, 
                PROP_DESC_audio_duration, 
                PROP_DESC_video_codec, 
                PROP_DESC_video_bitrate, 
                PROP_DESC_video_duration, 
                PROP_DESC_frame_rate, 
                PROP_DESC_size, 
                PROP_DESC_pixel_aspect_ratio, 
                PROP_DESC_display_aspect_ratio, 
                PROP_DESC_audio_codec, 
                PROP_DESC_audio_sample_rate, 
                PROP_DESC_audio_channels, 
                PROP_DESC_filesize
            ];
        }
        return _properties;
    }
    public static const PROP_DESC_format:PropertyDesc = new PropertyDesc( "format" );
    public var format:String;

    public static const PROP_DESC_bitrate:PropertyDesc = new PropertyDesc( "bitrate" );
    public var bitrate:String;

    public static const PROP_DESC_duration:PropertyDesc = new PropertyDesc( "duration" );
    public var duration:String;

    public static const PROP_DESC_audio_bitrate:PropertyDesc = new PropertyDesc( "audio_bitrate" );
    public var audio_bitrate:String;

    public static const PROP_DESC_audio_duration:PropertyDesc = new PropertyDesc( "audio_duration" );
    public var audio_duration:String;

    public static const PROP_DESC_video_codec:PropertyDesc = new PropertyDesc( "video_codec" );
    public var video_codec:String;

    public static const PROP_DESC_video_bitrate:PropertyDesc = new PropertyDesc( "video_bitrate" );
    public var video_bitrate:String;

    public static const PROP_DESC_video_duration:PropertyDesc = new PropertyDesc( "video_duration" );
    public var video_duration:String;

    public static const PROP_DESC_frame_rate:PropertyDesc = new PropertyDesc( "frame_rate" );
    public var frame_rate:String;

    public static const PROP_DESC_size:PropertyDesc = new PropertyDesc( "size" );
    public var size:String;

    public static const PROP_DESC_pixel_aspect_ratio:PropertyDesc = new PropertyDesc( "pixel_aspect_ratio" );
    public var pixel_aspect_ratio:String;

    public static const PROP_DESC_display_aspect_ratio:PropertyDesc = new PropertyDesc( "display_aspect_ratio" );
    public var display_aspect_ratio:String;

    public static const PROP_DESC_audio_codec:PropertyDesc = new PropertyDesc( "audio_codec" );
    public var audio_codec:String;

    public static const PROP_DESC_audio_sample_rate:PropertyDesc = new PropertyDesc( "audio_sample_rate" );
    public var audio_sample_rate:String;

    public static const PROP_DESC_audio_channels:PropertyDesc = new PropertyDesc( "audio_channels" );
    public var audio_channels:String;

    public static const PROP_DESC_filesize:PropertyDesc = new PropertyDesc( "filesize" );
    public var filesize:String;

}
}