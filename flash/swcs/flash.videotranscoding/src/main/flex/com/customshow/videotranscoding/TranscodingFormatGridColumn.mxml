<?xml version="1.0"?>
<!--
  Created by gary.y on 4/7/2016.
-->
<data:PropertiesGridColumn xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:data="com.flashflexpro.as3lib.data.*">
    <fx:Script><![CDATA[
        import com.customshow.configPerClient.DynaTableClientConfigTranscodeFormat;
        import com.flashflexpro.as3lib.data.PropertiesGridRow;
        import com.flashflexpro.as3lib.rpc.RpcSpringMvcPost;
        import com.flashflexpro.as3lib.utils.EscalateFromContextEvent;
        import com.flashflexpro.as3lib.utils.ExecutableMenuItem;
        import com.flashflexpro.as3lib.utils.RootContextApp;

        import mx.core.FlexGlobals;
        import mx.core.UIComponent;
        import mx.events.CloseEvent;

        import mx.managers.CursorManager;

        import spark.components.Alert;

        [Bindable(event="beanChanged")]
        public function get format():DynaTableClientConfigTranscodeFormat{
            return bean as DynaTableClientConfigTranscodeFormat;
        }


        [Bindable(event="gridChanged")]
        public function get transcConfigFormatGrid():TranscodingFormatGrid{
            return grid as TranscodingFormatGrid;
        }


        override public function showCellMenu( propRow:PropertiesGridRow ):void{
            super.showCellMenu( propRow );
            if( propRow.desc == DynaTableClientConfigTranscodeFormat.PROP_DESC_destination &&
                    bean[propRow.desc.name] != null && _rpc == null ){
                RootContextApp.inst.menuOperations.children.addItem( new ExecutableMenuItem() );
                var copyPreSignedUrl:ExecutableMenuItem = new ExecutableMenuItem();
                copyPreSignedUrl.label = "Load pre authenticated URL";
                copyPreSignedUrl.toolTip = "Load pre authenticated URL to download this resource";
                copyPreSignedUrl.target = this;
                copyPreSignedUrl.toExe = function ():void{
                    _rpc = new TranscodingService( grid.context ).loadDestPreSignUrl( onLoadDestPreSignUrl,
                            onErrorDestPreSignUrl, transcConfigFormatGrid.transcodingRecord.mediaId,
                            format.destination );
                    _rpc.callRemote();
                };
                grid.context.rootApp.menuOperations.children.addItem( copyPreSignedUrl );

                var popMedia:ExecutableMenuItem = new ExecutableMenuItem();
                popMedia.label = "Show Media";
                popMedia.toolTip = "Show Media";
                popMedia.target = this;
                popMedia.toExe = function ():void{
                    transcConfigFormatGrid.context.escalate( transcConfigFormatGrid, format );
                };
                grid.context.rootApp.menuOperations.children.addItem( popMedia );
            }
            else{
                CONFIG::debugging{
                    CC.log( this + ".showCellMenu: propRow:" + propRow );
                }//debug
            }
        }

        private function onErrorDestPreSignUrl( e:Object ):void{
            _rpc = null;
            CursorManager.removeBusyCursor();
            CONFIG::debugging{
                throw new Error( this + ".onErrorDestPreSignUrl " );
            }
        }

        private function onLoadDestPreSignUrl( r:String ):void{
            _rpc = null;
            Alert.show( "Click OK to copy to clipboard", "Pre Authenticated Url Loaded", Alert.OK | Alert.CANCEL,
                    FlexGlobals.topLevelApplication as UIComponent, function ( ev:CloseEvent ):void{
                        if( ev.detail == Alert.OK ){
                            System.setClipboard( r );
                        }
                    } );
        }

        private var _rpc:RpcSpringMvcPost;


        //        private function generatePr
        ]]></fx:Script>
</data:PropertiesGridColumn>