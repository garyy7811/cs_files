<?xml version="1.0"?>
<ww:TiBoTlePanel xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:ww="com.flashflexpro.as3lib.win.*"
                 tbPanel="{new FDWindow()}">
    <fx:Script><![CDATA[
        import mx.core.UIComponent;

        import spark.components.Group;


        [Bindable(event="winContainerChanged")]
        public function get winContainer():UIComponent{
            return owner as UIComponent;
        }

        [Bindable(event="winContainerChanged")]
        public function get winContainerFloating():WebWinContainer{
            return owner as WebWinContainer;
        }

        [Bindable(event="winContainerChanged")]
        public function get winContainerDividing():DividableWidget{
            return owner as DividableWidget;
        }

        [SkinPart(required="true")]
        public var topGroup:Group;

        override protected function partAdded( partName:String, instance:Object ):void{
            super.partAdded( partName, instance );
            if( instance == topGroup ){
                topGroup.addEventListener( MouseEvent.MOUSE_DOWN, onDragStart );
            }
        }

        override protected function partRemoved( partName:String, instance:Object ):void{
            super.partRemoved( partName, instance );
            if( instance == topGroup ){
                topGroup.removeEventListener( MouseEvent.MOUSE_DOWN, onDragStart );
            }
        }

        override public function set owner( value:DisplayObjectContainer ):void{
            if( owner != value ){
                super.owner = value;
                dispatchEvent( new Event( "winContainerChanged" ) );
            }
        }

        private function onMouseUp( event:MouseEvent ):void{
            stage.removeEventListener( MouseEvent.MOUSE_MOVE, onMouseMove );
            stage.removeEventListener( MouseEvent.MOUSE_UP, onMouseUp );
        }

        protected function onMouseMove( event:MouseEvent ):void{
            var moveToX:int = modelWin.winReg.x + stage.mouseX - modelWin.mouseStageReg.x;
            var moveToY:int = modelWin.winReg.y + stage.mouseY - modelWin.mouseStageReg.y;
            if( moveToX + width / 3 < 0 ){
                moveToX = - width / 3;
            }
            else if( moveToX + 2 * width / 3 > winContainerFloating.width ){
                moveToX = winContainerFloating.width - 2 * width / 3;
            }
            if( moveToY < 0 ){
                moveToY = 0;
            }
            else if( moveToY + topGroup.height > winContainerFloating.height ){
                moveToY = winContainerFloating.height - topGroup.height;
            }
            move( moveToX, moveToY );
        }


        [Bindable(event="tbPanelChanged")]
        public function get modelWin():FDWindow{
            return tbPanel as FDWindow;
        }

        protected function onDragStart( event:MouseEvent ):void{
            if( winContainerFloating == null ){
                return;
            }
            stage.addEventListener( MouseEvent.MOUSE_MOVE, onMouseMove );
            stage.addEventListener( MouseEvent.MOUSE_UP, onMouseUp );
            modelWin.mouseStageReg = new Point( stage.mouseX, stage.mouseY );
            modelWin.winReg = new Point( x, y );
        }

        [Bindable]
        internal var barButton:WebWinBarButton;
        ]]></fx:Script>
</ww:TiBoTlePanel>
