<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:ap="org.apache.flex.collections.*"
               xmlns:local="*" xmlns:reports="com.customshow.reporting.reports.*"
               xmlns:utils="com.flashflexpro.as3lib.utils.*"
               preinitialize="onPreInit();" enterFrame="callOnceInNextFrame.onEnterFrame();">
    <fx:Script><![CDATA[

        import com.customshow.reporting.reports.CsSlideViewStatsUIGrid;
        import com.flashflexpro.as3lib.rpc.RpcSpringMvcPost;

        /**
         * restUrl="{compiledConfig.apiUrl}"
         urlExtra="{compiledConfig.csSessionId}"
         */
        protected function onPreInit():void{
            rootApp.stage = systemManager.stage;

            CONFIG::debugging{
                rootApp.restUrl = compiledConfig.apiUrl;
                rootApp.urlExtra = compiledConfig.csSessionId;
                CsSlideViewStatsUIGrid.thumbNameUrlPath = compiledConfig.thumbNameUrlPath;
                rootApp.serverHandleType =
                        compiledConfig.rpcCallUseApiGateWay ? RpcSpringMvcPost.SERVER_TYPE_AWS_API_GATEWAY_JSON :
                                RpcSpringMvcPost.SERVER_TYPE_SERVLET_WITH_PATHS;
            }
            rootApp.appInit();
        }

        public function initializeReportArgs( queryServerUrl:String, slideThumbUrlPath:String, csSessionId:String,
                                              reportAwsGatewayApiKey:String = null,
                                              reportMsgFormatJsonTxt:Boolean = false ):void{
            rootApp.urlExtra = csSessionId;

            rootApp.restUrl = queryServerUrl;
            CsSlideViewStatsUIGrid.thumbNameUrlPath = slideThumbUrlPath;

            rootApp.serverHandleType =
                    compiledConfig.rpcCallUseApiGateWay ? RpcSpringMvcPost.SERVER_TYPE_AWS_API_GATEWAY_JSON :
                            RpcSpringMvcPost.SERVER_TYPE_SERVLET_WITH_PATHS;
        }

        public function addGroup( id:Number, name:String, parentId:Number = 0, depth:uint = 0 ):void{
            reportRoot.addGroup( id, name, parentId, depth );
        }
        ]]></fx:Script>
    <fx:Declarations>
        <local:AppCompiledConfig id="compiledConfig"/>
        <ap:ArrayList id="pressedKeys"/>
        <reports:CSNvReportingConsole id="reportRoot" sqlUrl="{compiledConfig.nvMySqlUrl}">
            <reports:context>
                <utils:RootContextApp id="rootApp">
                    <utils:callInNext>
                        <utils:CallOnceInNextFrame id="callOnceInNextFrame"/>
                    </utils:callInNext>
                    <utils:pressedKeys>
                        <ap:ArrayList/>
                    </utils:pressedKeys>
                    <utils:rpcOnAir>
                        <ap:ArrayList/>
                    </utils:rpcOnAir>
                    <utils:rpcWaitQue>
                        <ap:ArrayList/>
                    </utils:rpcWaitQue>
                </utils:RootContextApp>
            </reports:context>
        </reports:CSNvReportingConsole>

    </fx:Declarations>
    <reports:CsReportsRootUI reportRoot="{reportRoot}" width="100%" height="100%"/>
</s:Application>